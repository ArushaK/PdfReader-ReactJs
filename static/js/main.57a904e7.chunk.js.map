{"version":3,"sources":["components/Loader.jsx","components/ControlPanel.jsx","components/PDFReader.jsx","App.js","reportWebVitals.js","index.js"],"names":["Loader","isLoading","id","className","src","alt","ControlPanel","props","file","pageNumber","numPages","setPageNumber","scale","setScale","useState","toggle","setToggle","isMinZoom","isMaxZoom","zoomOutClass","zoomInClass","onClick","themeHandler","toFixed","href","download","title","pdfjs","GlobalWorkerOptions","workerSrc","version","PDFReader","setIsLoading","data","onLoadSuccess","map","page","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sUAYeA,EAVA,SAAC,GACd,OAD8B,EAAfC,UAGb,sBAAKC,GAAG,SAASC,UAAU,+DAA3B,UACE,qBAAKC,IAAI,wCAAwCC,IAAI,SAASF,UAAU,kBACxE,8CAJkB,M,OCkDTG,EAjDM,SAACC,GACmDA,EAA/DC,KAA+DD,EAAzDE,WAAyDF,EAA7CG,SAA6CH,EAAnCI,cADL,IACoBC,EAAoBL,EAApBK,MAAOC,EAAaN,EAAbM,SAD5B,EAEFC,oBAAS,GAFP,mBAEvBC,EAFuB,KAEfC,EAFe,KAIxBC,EAAYL,EAAQ,GACpBM,EAAYN,GAAS,EAErBO,EAAeF,EAAY,WAAa,YACxCG,EAAcF,EAAY,WAAa,YAe7C,OACE,sBAAKf,UAAU,4EAAf,UACE,qBAAKA,UAAU,sDAAf,SACA,wBAAQkB,QARK,WACfd,EAAMe,cAAcP,GACpBC,GAAWD,IAMT,SAA4BA,EAAS,aAAe,kBAEpD,sBAAKZ,UAAU,sDAAf,UACE,mBACEA,UAAS,mCAA8BgB,GACvCE,QArBQ,WACTJ,GAAWJ,EAASD,EAAQ,OAsB7B,kCAAgB,IAARA,GAAaW,UAArB,OACA,mBACEpB,UAAS,kCAA6BiB,GACtCC,QAtBO,WACRH,GAAWL,EAASD,EAAQ,UAwB/B,qBAAKT,UAAU,OAAf,SACE,mBAAGqB,KAAK,0EAA0EC,UAAU,EAAMC,MAAM,WAAxG,SACE,mBAAGvB,UAAU,2CCzCvBwB,IAAMC,oBAAoBC,UAA1B,kDAAiFF,IAAMG,QAAvF,kBAEA,IA2CeC,EA3CG,WAAO,IAAD,EACIjB,mBAAS,GADb,mBACfF,EADe,KACRC,EADQ,OAEMC,oBAAS,GAFf,mBAEfC,EAFe,KAEPC,EAFO,OAGYF,oBAAS,GAHrB,mBAGfb,EAHe,KAGJ+B,EAHI,KActB,OACE,gCACE,cAAC,EAAD,CAAQ/B,UAAWA,IACnB,0BACEC,GAAG,cACHC,UAAU,8CAFZ,UAIE,cAAC,EAAD,CACES,MAAOA,EACPC,SAAUA,EACVS,aAdR,SAAuBW,GACrBjB,EAAUiB,IAcJzB,KAAK,4EAEdO,GAAU,cAAC,IAAD,CACDP,KAAK,0EACL0B,cAxBR,WAEEF,GAAa,IAoBN,SAIA,CAAC,EAAE,EAAE,GAAGG,KAAI,SAAAC,GAAI,OACf,cAAC,IAAD,CAAM3B,WAAY2B,EAAMxB,MAAOA,gBC3B5ByB,MARf,WACE,OACE,qBAAKlC,UAAU,MAAf,SACE,cAAC,EAAD,OCMSmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.57a904e7.chunk.js","sourcesContent":["import React from 'react';\n\nconst Loader = ({isLoading}) => {\n  if(!isLoading) return null;\n  return (\n    <div id=\"loader\" className=\"d-flex justify-content-center align-items-center flex-column\">\n      <img src=\"https://react-pdf.org/images/logo.png\" alt=\"loader\" className=\"mb-5 App-logo\" />\n      <p>Loading...</p>\n    </div>\n  )\n}\n\nexport default Loader\n","\nimport React, { useState } from 'react';\nimport PDFPrinter from './PDFPrinter';\n\nconst ControlPanel = (props) => {\n  const { file, pageNumber, numPages, setPageNumber, scale, setScale } = props;\n  const [toggle, setToggle] = useState(true)\n\n  const isMinZoom = scale < 0.6;\n  const isMaxZoom = scale >= 2.0;\n\n  const zoomOutClass = isMinZoom ? 'disabled' : 'clickable';\n  const zoomInClass = isMaxZoom ? 'disabled' : 'clickable';\n\n  const zoomOut = () => {\n    if (!isMinZoom) setScale(scale - 0.1);\n  };\n\n  const zoomIn = () => {\n    if (!isMaxZoom) setScale(scale + 0.1);\n  };\n\n  const showForm = () => {\n    props.themeHandler(!toggle)\n    setToggle(!toggle)\n  }\n\n  return (\n    <div className=\"control-panel m-3 p-3 d-flex align-items-baseline justify-content-between\">\n      <div className=\"d-flex justify-content-between align-items-baseline\">\n      <button onClick={showForm}>{toggle ? 'Dark Theme' : 'Light Theme'}</button>\n      </div>\n      <div className=\"d-flex justify-content-between align-items-baseline\">\n        <i\n          className={`fas fa-search-minus mx-3 ${zoomOutClass}`}\n          onClick={zoomOut}\n        />\n        <span>{(scale * 100).toFixed()}%</span>\n        <i\n          className={`fas fa-search-plus mx-3 ${zoomInClass}`}\n          onClick={zoomIn}\n        />\n      </div>\n      <div className=\"mx-3\">\n        <a href=\"https://mozilla.github.io/pdf.js/web/compressed.tracemonkey-pldi-09.pdf\" download={true} title=\"download\">\n          <i className=\"fas fa-file-download clickable\" />\n        </a>\n      </div>\n      \n    </div>\n  );\n};\n\nexport default ControlPanel;\n","import React, { useState } from 'react';\nimport Loader from './Loader';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport ControlPanel from './ControlPanel';\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nconst PDFReader = () => {\n  const [scale, setScale] = useState(1.0);\n  const [toggle, setToggle] = useState(true)\n  const [isLoading, setIsLoading] = useState(true);\n\n  function onDocumentLoadSuccess() {\n    // setNumPages(numPages);\n    setIsLoading(false);\n  }\n\n  function toggleHandler(data){\n    setToggle(data)\n  }\n\n  return (\n    <div>\n      <Loader isLoading={isLoading} />\n      <section\n        id=\"pdf-section\"\n        className=\"d-flex flex-column align-items-center w-100\"\n      >\n        <ControlPanel\n          scale={scale}\n          setScale={setScale}\n          themeHandler={toggleHandler}\n          file=\"https://mozilla.github.io/pdf.js/web/compressed.tracemonkey-pldi-09.pdf\"\n        />\n{toggle && <Document\n          file=\"https://mozilla.github.io/pdf.js/web/compressed.tracemonkey-pldi-09.pdf\"\n          onLoadSuccess={onDocumentLoadSuccess}\n        >\n          {[1,2,3].map(page => (\n            <Page pageNumber={page} scale={scale}/>\n        ))}\n          {/* <Page scale={scale} /> */}\n        </Document>}\n\n        \n      </section>\n    </div>\n  );\n};\n\nexport default PDFReader;\n","import './App.css';\nimport PDFReader from './components/PDFReader';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PDFReader />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}